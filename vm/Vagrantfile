# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/focal64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "..", "/sync",
    type: "rsync",
    rsync__exclude: [".git/", "vm/", ".vscode/"]


  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessable to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Login settings
  config.ssh.username = "vagrant"
  config.ssh.password = "vagrant"
  config.ssh.connect_timeout = 5

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
    vb.cpus = 1


    # Additinal settings to make boot faster and work on reboot
    vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
    vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
  
    # Customize the amount of memory on the VM:
    vb.memory = "4096"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    # Install packages
    sudo apt-get update -y
    sudo apt-get install unzip -y
    sudo apt-get upgrade openssl -y
    sudo apt install mysql-server -y
    sudo apt-get install php7.4-cli php7.4-dev php-pear -fy
    sudo apt-get install php-mbstring php.intl php-mysql php-curl php-gd php-zip -y
    sudo apt-get install apache2 -y
    sudo apt install libapache2-mod-php -y
    sudo a2enmod rewrite
    # Composer instalation
    wget https://raw.githubusercontent.com/composer/getcomposer.org/76a7060ccb93902cd7576b67264ad91c8a2700e2/web/installer -O - -q | php -- --quiet
    sudo mv composer.phar /usr/local/bin/composer
    # Project setup
    sudo mkdir /var/www/simple_crud
    sudo cp -r /sync/* /var/www/simple_crud
    sudo chown -R vagrant: /var/www/simple_crud
    # Web server configuration
    sudo rm /etc/apache2/sites-available/000-default.conf
    sudo rm /etc/apache2/sites-enabled/000-default.conf
    sudo cp /var/www/simple_crud/config/server/simple_crud.conf /etc/apache2/sites-available/
    sudo ln -s /etc/apache2/sites-available/simple_crud.conf /etc/apache2/sites-enabled/simple_crud.conf
    # Database schema
    sudo mysql < /var/www/simple_crud/config/schema/db_setup.sql
    sudo mysql --database crud_data < /var/www/simple_crud/config/schema/sessions.sql
    sudo mysql --database crud_data < /var/www/simple_crud/config/schema/users.sql
    sudo mysql --database crud_data < /var/www/simple_crud/config/schema/contacts.sql
    # Install dependencies
    cd /var/www/simple_crud && composer install -y
    sudo systemctl restart apache2
  SHELL
end
